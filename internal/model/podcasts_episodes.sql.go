// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: podcasts_episodes.sql

package model

import (
	"context"
)

const getPodcastEpisodesByPodcastId = `-- name: GetPodcastEpisodesByPodcastId :many
SELECT podcast_id, id, uuid, feed_id, url, title, description, pub_date, file_size, duration, audio_content FROM podcasts_episodes where podcast_id = ?
`

func (q *Queries) GetPodcastEpisodesByPodcastId(ctx context.Context, podcastID int64) ([]PodcastsEpisode, error) {
	rows, err := q.db.QueryContext(ctx, getPodcastEpisodesByPodcastId, podcastID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []PodcastsEpisode
	for rows.Next() {
		var i PodcastsEpisode
		if err := rows.Scan(
			&i.PodcastID,
			&i.ID,
			&i.Uuid,
			&i.FeedID,
			&i.Url,
			&i.Title,
			&i.Description,
			&i.PubDate,
			&i.FileSize,
			&i.Duration,
			&i.AudioContent,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
